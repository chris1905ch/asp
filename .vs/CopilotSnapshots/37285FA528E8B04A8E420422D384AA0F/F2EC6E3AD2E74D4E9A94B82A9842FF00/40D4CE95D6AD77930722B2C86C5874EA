@model SistemaHotel.Models.Cliente
@{
    ViewBag.Title = "Editar Cliente";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<link href="~/Content/bootstrap.min.css" rel="stylesheet" />
<link href="~/Content/Site.css" rel="stylesheet" />
<div class="luxury-bg min-vh-100 p-4">
    <div class="container">
        <div class="d-flex justify-content-between align-items-center mb-4">
            <h2 class="luxury-title">Editar Cliente</h2>
            <a href="@Url.Action("Index")" class="btn btn-outline-secondary">Volver</a>
        </div>
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()
            @Html.HiddenFor(m => m.Id)
            <div class="row">
                <div class="col-md-6 mb-3">
                    @Html.LabelFor(m => m.Nombres)
                    @Html.TextBoxFor(m => m.Nombres, new { @class = "form-control", required = "required" })
                    @Html.ValidationMessageFor(m => m.Nombres, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-6 mb-3">
                    @Html.LabelFor(m => m.Apellidos)
                    @Html.TextBoxFor(m => m.Apellidos, new { @class = "form-control", required = "required" })
                    @Html.ValidationMessageFor(m => m.Apellidos, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-6 mb-3">
                    @Html.LabelFor(m => m.Documento)
                    @Html.TextBoxFor(m => m.Documento, new { @class = "form-control", maxlength = 9, pattern = "\\d{8,9}", title = "Debe ingresar 8 o 9 números (DUI o NIT de El Salvador)" })
                    @Html.ValidationMessageFor(m => m.Documento, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-6 mb-3">
                    @Html.LabelFor(m => m.Telefono)
                    @Html.TextBoxFor(m => m.Telefono, new { @class = "form-control", maxlength = 8, pattern = "\\d{8}", title = "Debe ingresar exactamente 8 números" })
                    @Html.ValidationMessageFor(m => m.Telefono, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-6 mb-3">
                    @Html.LabelFor(m => m.Email)
                    @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-6 mb-3">
                    @Html.LabelFor(m => m.Pais)
                    @Html.TextBoxFor(m => m.Pais, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.Pais, "", new { @class = "text-danger" })
                </div>
                <div class="col-12 mb-3">
                    @Html.LabelFor(m => m.Notas)
                    @Html.TextAreaFor(m => m.Notas, new { @class = "form-control", rows = 2 })
                    @Html.ValidationMessageFor(m => m.Notas, "", new { @class = "text-danger" })
                </div>
            </div>
            <button type="submit" class="btn luxury-btn">Guardar Cambios</button>
        }
    </div>
</div>
<script>
    // Solo permitir números en el campo teléfono y documento
    document.addEventListener('DOMContentLoaded', function() {
        var tel = document.getElementById('Telefono');
        if (tel) {
            tel.addEventListener('input', function(e) {
                this.value = this.value.replace(/[^0-9]/g, '').slice(0,8);
            });
        }
        var doc = document.getElementById('Documento');
        if (doc) {
            doc.addEventListener('input', function(e) {
                this.value = this.value.replace(/[^0-9]/g, '').slice(0,9);
            });
        }
    });
</script>
